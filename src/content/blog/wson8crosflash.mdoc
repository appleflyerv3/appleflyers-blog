---
title: A Simple Guide to Flash WSON-8/SOIC-8 Chromebook Chips(Method 1)
description: This method is one of two methods that can be used to flash a chromebook's chip for unenrollment
tags:
  - chromeos
  - jailbreak
  - exploit
author: appleflyer
authorTwitter: appleflyer
date: "2024-04-04T10:13:12.210Z"
image: https://raw.githubusercontent.com/appleflyerv3/appleflyers-blog/main/public/b04f2bb6fdac69f7e747ec1dfdfb9446efdaefd3.png
category: design
---
{% callout type="warning" title="WARNING/DISCLAMER" %}
    HIS GUIDE HAS RISK INVOLVED INTO IT. IT MAY BRICK YOUR COMPUTER JUST LIKE HOW THE PENCIL BYPASS CAN.
    Any damages made is your own fault. Not mine, or others.
{% /callout %}

## For this, you will be needing to BUY SOME ITEMS which cost about 10-15 dollars max on Amazon. If you don't want to buy items to deprovision your device, I suggest going to the SH1MMER discord server instead to look for other methods
________________________________________________________________________________________________________
Hello! If you are reading this, you probably are interested in flashing the chromebook's chip probably because you want to unenroll it (the main purpose of this guide). I have decided to make this document because I took a really long while just to gather some information on chip flashing and so I have decided to share what I have found as a guide. 
(personally i feel the pencil bypass is way riskier and requires a shim whereas this method doesn't require a shim and has less risk involved. nevertheless, it is still risky)
________________________________________________________________________________________________________
## Step 1: Obtaining Necessary Materials and Files
### Materials
First, you will need to buy a CH341a programmer that is basically a mini programmer that can read and program 24 and 24 series chips, as well as other microcontrollers, EEPROMs, and other memory chips. This is definitely a needed item in order to flash the chip. 

You will also need a clip to clip onto the chip so that you can connect the programmer to the chip. For some chips, you might also need to have an adaptor that you can mount onto the programmer so that the computer can read and write on the chip.

In short terms, you will need
* A CH341a USB flash programmer
* A 1.8v adapter (needed for devices which use 1.8v flash chips.) 
  (i dont know much about which chips need an adapter but I definitely know that GigaDevice chips need adapters)
* An SOIC-8 chip clip
* a windows pc :)

### Files to Download
You will need to download
* A CH341PAR Driver
* NeoProgrammer
* Firmware ROM file

First, I will get into downloading the Chromebook ROM file.
1. Check to see if your device is supported: <https://mrchromebox.tech/#devices>. If your device is not there, you can't do this chip flash unless you find your own workaround??
2. Note down your Chromebook codename. Example is "CRAASKBOWL" or "BOBBA360". If you are unsure of your chromebook codename, just note down your board name.
3. Go to <https://github.com/MrChromebox/scripts/blob/master/sources.sh> and find your board. Use the search function of your browser to find the ROM. For example, if you know your chromebook codename, just search in the webpage for "your chromebook codename"
4. Add the prefix "https://mrchromebox.tech/files/firmware/full_rom/" to download the ROM.

Example for the Acer Spin 511 "nissa"(craaskbowl): (the date at the end will change over time) <https://mrchromebox.tech/files/firmware/fullrom/coreboot_edk2-craaskbowl-mrchromebox_20240223.rom>
There. You have your ROM file.

Other download links:
+ [NeoProgrammer](https://www.dwdvb.com/ch341a-usb-mini-programmer-latest-software-download/)
+ [Driver](https://www.wch-ic.com/downloads/CH341PAR_EXE.html)

### Preparation for the flashing is done. You may now move on to the next steps to flash your chromebook chip. 

## Step 2: Making your computer able to flash the chip
Install the [CH341PAR driver](Driver(https://www.wch-ic.com/downloads/CH341PAR_EXE.html) that was provided on top.

```bash
# make a new project directory and jump into it
mkdir my-astro-project && cd $_

# create a new project with npm
npm create astro@latest

# or yarn
yarn create astro

# or pnpm
pnpm create astro@latest
```

## Python

```python
print('hello world')
```

## Javascript

```js
const func = () => {alert("hello")}
```
