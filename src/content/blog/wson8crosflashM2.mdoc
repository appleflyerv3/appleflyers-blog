---
title: A Simple Guide to Flash WSON-8/SOIC-8 Chromebook Chips(Method 2)
description: This method is the second of two methods that can be used to flash a chromebook's chip for unenrollment
tags:
  - chromeos
  - jailbreak
  - exploit
author: appleflyer
authorTwitter: appleflyer
date: "2024-04-06T19:25:01.210Z"
image: https://raw.githubusercontent.com/appleflyerv3/appleflyers-blog/main/public/Flashrom_chip_detect.png
category: cros
---
{% callout type="warning" title="WARNING/DISCLAMER" %}
    THIS GUIDE HAS RISK INVOLVED INTO IT. IT MAY BRICK YOUR COMPUTER JUST LIKE HOW THE PENCIL BYPASS CAN.
    Any damages made is your own fault. Not mine, or others.
{% /callout %}

## For this, you will be needing to BUY SOME ITEMS which cost about 10-15 dollars max on Amazon. If you don't want to buy items to deprovision your device, I suggest going to the SH1MMER discord server instead to look for other methods(other methods linked below)

This second method of flashing the chromebook actually changes the serial number of the chromebook to deprovision the chromebook device.
________________________________________________________________________________________________________
Hello! If you are reading this, you probably are interested in flashing the chromebook's chip probably because you want to unenroll it (the main purpose of this guide). I have decided to make this document because I took a really long while just to gather some information on chip flashing and so I have decided to share what I have found as a guide. 
(personally i feel the pencil bypass is way riskier and requires a shim whereas this method doesn't require a shim and has less risk involved. nevertheless, it is still risky)

**any issues? contact [appleflyerv3](https://discordapp.com/users/1209096766075703368) on discord** 
________________________________________________________________________________________________________
## Step 1: Obtaining Necessary Materials
### Materials
First, you will need to buy a CH341a programmer that is basically a mini programmer that can read and program 24 and 24 series chips, as well as other microcontrollers, EEPROMs, and other memory chips. This is definitely a needed item in order to flash the chip. 

You will also need a clip to clip onto the chip so that you can connect the programmer to the chip. For some chips, you might also need to have an adaptor that you can mount onto the programmer so that the computer can read and write on the chip.

In short terms, you will need
* A CH341a USB flash programmer
* A 1.8v adapter (needed for devices which use 1.8v flash chips.) 
  (i dont know much about which chips need an adapter but I definitely know that GigaDevice chips need adapters)
* An SOIC-8 chip clip
* A Linux setup should do as long as either flashrom is available from the distro's software repositories. This guide will use a Ubuntu 23.04 live session booted from USB.

### Preparation for the flashing is done. You may now move on to the next steps to flash your chromebook chip. 
________________________________________________________________________________________________________
## Step 2: Making your computer able to flash the chip
Connect your setup to Wifi/internet

Then, open a (non-root) terminal/shell window, change to home directory
```bash
cd;
```
Install flashrom via apt:
```bash
sudo apt update
sudo apt install flashrom
```

Install vpd via tar.
How to install the vpd command:
```bash
wget https://mrchromebox.tech/files/util/vpd.tar.gz 1 && tar -zxf vpd.tar.gz
```

## Step 3: Connecting the computer to your chromebook chip
Firstly, connect the CH341a USB Programmer to the chip clip. Red wire goes connects to number 1 on the ch341a chip flasher(see image below). **DO NOT PLUG IT IN WRONGLY. IT MAY RESULT IN YOUR COMPUTER BEING BRICKED.**
Next, open up your chromebook and look around the Chromebook motherboard and look for a small 8-pin chip with pins sticking out or in. These chips tend to have WINBOND or GIGADEVICE branding, and may either say 25Q64[xx] or 25Q128[xx] right below the branding. You may need to flip over the motherboard to find this chip.

in mrchromebox's words
> Pin 1 of the flash chip will be notated by a dot/depression on the chip; be sure to align this with pin 1 on the chip clip wiring (a red strip on the example linked above).

Your Chromebook may have multiple of these chips, just look for the one that is most similar to the description stated.

Next, attach the chip clip to the programmer. The red wire should be connected to the pin nearest to the "dot" or indent at the side of the chip. Now, plug in the usb programmer into ur windows laptop. You have now connected the chip to the computer and you are now ready to flash!

![annotated ch341a](https://raw.githubusercontent.com/appleflyerv3/appleflyers-blog/main/public/Ch341a_annotated.png "ch341a")
![SOIC-8 chip WINBOND](https://raw.githubusercontent.com/appleflyerv3/appleflyers-blog/main/public/soic-8-chip.jpg "chip p") ![WSON-8 chip WINBOND](https://raw.githubusercontent.com/appleflyerv3/appleflyers-blog/main/public/wson-8-chip.png "chip p")

Now, we test connectivity and ensure the flash chip is properly identified:
```bash
sudo flashrom -p ch341a_spi
```

## Step 4: FLASHING the WSON-8 chip
This is the most crucial step. Do not mess this up. If you do, you **WILL BRICK** your chromebook. Therefore, I recommend saving a copy of your current ROM. Here are the steps.


```bash
sudo flashrom -p ch341a_spi -r oldflash.rom
```


Now that you have done this, you may now flash the chip.





## other methods for deprovisioning device/temporary deprovisioning methods
other methods may include:
+ the pencil bypass, [instructions in SH1mmer/TN discord]
+ cryptosmite(patched for kernver 3), [instructions in SH1mmer/TN discord]
+ sh1mmer(patched for v111 and above), [instructions in SH1mmer/TN discord]
+ terraos, [instructions in SH1mmer/TN discord]
+ ehalycon, [instructions in SH1mmer/TN discord]
+ shimboot, [instructions in SH1mmer/TN discord]
+ rmasmoke for cryptosmite(not public yet, and probably never ever gonna release it)
*(as of mar 22 2024)*

# Credits
This information is not mine. I have merely compiled information from other people's blog posts and youtube videos. Credits are below.
Credits:
+ <https://wiki.mrchromebox.tech/Unbricking>
+ <https://www.youtube.com/watch?v=dceYuO3Mxuk>
+ some help from the SH1mmer discord (<https://discord.gg/bAgNyGpXSx>) and community
+ <https://blog.osu.bio/blog/3-the-tsunami>

# FAQ:
Why does it give an error when I run vpd?
+  If it gives an error when running vpd, saying:
  ```bash
  bash: .: /your/directory/vpd: cannot execute binary file 
  ```
  it is because you are on a different architecture that the vpd executable is on. You may need to recompile your own vpd binary or emulate it on your computer. I will not go into how to do either as it makes the blog too long.

*guide v2.2*

